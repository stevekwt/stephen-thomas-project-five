{"version":3,"sources":["firebase.js","DisplayForm.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DisplayForm","props","handleSubmit","e","preventDefault","updateFirebase","timeSubmittedinMS","Date","now","console","log","humanDate","humantimeaa","toLocaleString","item","state","userInput","date","document","querySelector","value","handleInputChange","setState","target","removeGoal","goalId","removeFromFirebase","renderGoals","goalsArray","length","map","className","changeDateOrder","orderDirection","sort","b","a","handleChange","selectedChoice","action","htmlFor","type","id","placeholder","onChange","this","onClick","displayRandomThing","getRandomGoal","name","disabled","Component","App","randomItem","Math","floor","random","randomGoal","firebaseRef","bind","database","ref","undefined","push","child","remove","on","snapshot","firebaseDataObj","val","Object","values","off","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.4e2fea02.chunk.js","sourcesContent":["// from https://firebase.google.com/docs/web/setup#using-module-bundlers\n// and https://github.com/HackerYou/bootcamp-notes/blob/master/react-and-firebase/using-firebase-with-react.md\n\n// import Firebase SDK from npm install firebase node package\n// Core firebase SDK\nimport firebase from \"firebase/app\";\n// Realtime database library\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAhusalV2PNOkZTGMJoF5jEdG6j1MyAwKQ\",\n    authDomain: \"continuity-fdab5.firebaseapp.com\",\n    databaseURL: \"https://continuity-fdab5.firebaseio.com\",\n    projectId: \"continuity-fdab5\",\n    storageBucket: \"continuity-fdab5.appspot.com\",\n    messagingSenderId: \"197882571705\",\n    appId: \"1:197882571705:web:d4d032992e5d5e0d586468\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import \"./App.scss\";\nimport { Component, Fragment } from \"react\";\nclass DisplayForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"\",\n      selectedChoice: 'placeholder'\n    };\n  }\n\n  componentDidMount() {}\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // destructure firebase function object from this.props\n    const { updateFirebase } = this.props;\n    const timeSubmittedinMS = Date.now();\n    console.log(`timeSubmittedinMS`, timeSubmittedinMS);\n    const humanDate = new Date(timeSubmittedinMS);\n    console.log(`humanDate`, humanDate);\n    const humantimeaa = humanDate.toLocaleString();\n    console.log(`humantimeaa is`, humantimeaa);\n    // const humanTime = Date(date);\n    // console.log(`humanTime`, humanTime);\n    const thingGoingToFirebase = { \n      item: this.state.userInput, \n      date: humantimeaa \n    }\n    updateFirebase(thingGoingToFirebase);\n    // clear the text input field\n    document.querySelector(\"input\").value = \"\";\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      userInput: e.target.value,\n    });\n  };\n\n  removeGoal = (goalId) => {\n    if (!goalId) return;\n    const { removeFromFirebase } = this.props;\n    removeFromFirebase(goalId);\n  };\n\n  renderGoals = (goalsArray) => {\n    if (!goalsArray.length) return <li>No goals to show</li>;\n    return goalsArray.map(({ date, item }) => {\n      return (\n        <li key={date}>\n          <p><span className=\"ideaSpan\">{item}</span></p>\n          {/* <span> -- </span> */}\n          <span className=\"dateSpan\">{date}</span>\n          {/* <button onClick={() => this.removeGoal(item)}>remove</button> */}\n        </li>\n      );\n    });\n  };\n\n  changeDateOrder = (orderDirection) => {\n    console.log(`i'm in changeDateOrder`, orderDirection);\n    console.log(this.props.goalsArray);\n    const oldestFirst = ( a, b ) => {\n      if ( a.date < b.date ){\n        return -1;\n      }\n      if ( a.date > b.date ){\n        return 1;\n      }\n      return 0;\n    }\n    const newestFirst = ( b, a ) => {\n      if ( a.date < b.date ){\n        return -1;\n      }\n      if ( a.date > b.date ){\n        return 1;\n      }\n      return 0;\n    }\n    if (orderDirection === \"newest\") {\n      this.props.goalsArray.sort(newestFirst)\n    } else {\n      this.props.goalsArray.sort(oldestFirst)\n    }\n    console.log(`this.props.goalsArray after sort`, this.props.goalsArray);\n    this.renderGoals(this.props.goalsArray)\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      selectedChoice: e.target.value\n    })\n    // this.changeDateOrder(this.state.selectedChoice);\n    this.changeDateOrder(e.target.value);\n  }\n  \n  render() {\n    return (\n      <Fragment>\n        \n        {/* // FORM */}\n        <section className=\"inputFormSection\">\n          <div className=\"internalFormDiv wrapper\">\n          <form action=\"\">\n\n            <label htmlFor=\"newGoal\" className=\"newGoal\" >What do you want someone to write about? </label>\n\n            <div className=\"textAndButton\">\n\n              <input type=\"text\" id=\"newGoal\" className=\"ideaTextField\" placeholder=\"Something world-explaining..?\" onChange={this.handleInputChange} />\n\n              <button className=\"addButton\" onClick={this.handleSubmit}>Add</button>\n\n            </div>\n            \n\n          </form>\n          </div>\n        </section>\n\n        {/* // RANDOM ITEM */}\n        <section className=\"randomItem\">\n          <div className=\"internalRandomDiv wrapper\">\n            <span className=\"randomIntroText\">Random Essay Idea: </span>\n              \n            <span className=\"randomEssayIdea\">{this.props.displayRandomThing}</span> \n\n            <button className=\"anotherButton\" onClick={this.props.getRandomGoal}>Show me another</button> \n          </div>\n        </section>\n\n        {/* // LIST OF ITEMS */}\n        <section className=\"itemList\">\n          <div className=\"internalListDiv wrapper\">\n            <h2>The Ideas</h2>\n\n            <form>\n                <label htmlFor=\"orderByDate\" className=\"srOnly\">Order by:</label>\n                <select \n                    name=\"orderByDate\" \n                    id=\"orderByDate\" \n                    onChange={this.handleChange}\n                    value={this.state.selectedChoice} >\n                        <option value=\"placeholder\" disabled>Order By:</option>\n                        <option value=\"newest\">Newest</option>\n                        <option value=\"oldest\">Oldest</option>\n                </select>\n            </form>\n\n            <ul>\n                {this.renderGoals(this.props.goalsArray)}\n            </ul>\n          </div>\n        </section>\n\n      </Fragment>\n    );\n  }\n}\nexport default DisplayForm;","import \"./App.scss\";\nimport firebase from \"./firebase.js\";\nimport { Component, Fragment } from \"react\";\nimport DisplayForm from \"./DisplayForm.js\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      goalsArray: [],\n      randomGoal: \"\",\n    };\n    this.firebaseRef = this.firebaseRef.bind(this);\n    this.updateFirebase = this.updateFirebase.bind(this);\n    this.removeFromFirebase = this.removeFromFirebase.bind(this);\n  }\n\n  // get reference to firebase and return it\n  firebaseRef() {\n    const dbRef = firebase.database().ref();\n    return dbRef;\n  }\n\n  //generic function to update firebase\n  updateFirebase(value) {\n    if (value === undefined || null) return;\n    const dbRef = this.firebaseRef();\n    dbRef.push(value);\n  }\n\n  //generic function to remove from firebase\n  removeFromFirebase(id) {\n    if (id === undefined || null) return;\n    const dbRef = this.firebaseRef();\n    dbRef.child(id).remove();\n  }\n\n  componentDidMount() {\n    const dbRef = this.firebaseRef();\n    dbRef.on(\"value\", (snapshot) => {\n      const firebaseDataObj = snapshot.val();\n      console.log(firebaseDataObj);\n      if (firebaseDataObj === null) {\n        return this.setState({ goalsArray: [] });\n      }\n      const goalsArray = Object.values(firebaseDataObj)\n      console.log(goalsArray);\n      this.setState({\n        goalsArray: goalsArray\n      });\n      console.log(this.state.goalsArray);\n      if (this.state.randomGoal === '') {\n        this.getRandomGoal();\n      } \n    });\n  }\n\n  componentWillUnmount() {\n    const dbRef = this.firebaseRef();\n    dbRef.off();\n  }\n\n  getRandomGoal = () => {\n    console.log(`inside getrandomgoals function`);\n    const goalsArray = this.state.goalsArray;\n    console.log(`goalsArray`, goalsArray);\n    const randomArrayIndex = Math.floor(Math.random() * goalsArray.length);\n    const randomItem = goalsArray[randomArrayIndex]?.item; \n    console.log(randomItem);\n    this.setState({\n      randomGoal: randomItem\n    })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <header>\n          <div className=\"internalHeader wrapper\">\n            <h1>Essay Idea DB</h1>\n          </div>\n        </header>\n\n        <DisplayForm\n          goalsArray={this.state.goalsArray}\n          updateFirebase={this.updateFirebase}\n          removeFromFirebase={this.removeFromFirebase}\n          displayRandomThing={this.state.randomGoal}\n          getRandomGoal={this.getRandomGoal}\n        />\n        \n      </Fragment>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}