{"version":3,"sources":["firebase.js","DisplayForm.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DisplayForm","props","handleSubmit","e","preventDefault","updateFirebase","state","userInput","document","querySelector","value","handleInputChange","setState","target","removeGoal","goalId","removeFromFirebase","renderGoals","goalsArray","length","map","id","action","htmlFor","type","onChange","this","onClick","displayRandomThing","getRandomGoal","Component","App","randomItem","Math","floor","random","randomGoal","firebaseRef","bind","database","ref","undefined","push","child","remove","on","snapshot","firebaseDataObj","val","console","log","Object","entries","off","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2c81cd06.chunk.js","sourcesContent":["// from https://firebase.google.com/docs/web/setup#using-module-bundlers\n// and https://github.com/HackerYou/bootcamp-notes/blob/master/react-and-firebase/using-firebase-with-react.md\n\n// import Firebase SDK from npm install firebase node package\n// Core firebase SDK\nimport firebase from \"firebase/app\";\n// Realtime database library\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAhusalV2PNOkZTGMJoF5jEdG6j1MyAwKQ\",\n    authDomain: \"continuity-fdab5.firebaseapp.com\",\n    databaseURL: \"https://continuity-fdab5.firebaseio.com\",\n    projectId: \"continuity-fdab5\",\n    storageBucket: \"continuity-fdab5.appspot.com\",\n    messagingSenderId: \"197882571705\",\n    appId: \"1:197882571705:web:d4d032992e5d5e0d586468\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import \"./App.css\";\n// import firebase from \"./firebase.js\";\nimport { Component } from \"react\";\nclass DisplayForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"\",\n    };\n  }\n\n  componentDidMount() {}\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // destructure firebase function object from this.props\n    const { updateFirebase } = this.props;\n    updateFirebase(this.state.userInput);\n    // clear the text input field\n    document.querySelector(\"input\").value = \"\";\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      userInput: e.target.value,\n    });\n  };\n\n  removeGoal = (goalId) => {\n    if (!goalId) return;\n    const { removeFromFirebase } = this.props;\n    removeFromFirebase(goalId);\n  };\n\n  renderGoals = (goalsArray) => {\n    if (!goalsArray.length) return <li>No goals to show</li>;\n    return goalsArray.map(({ id, value }) => {\n      return (\n        <li key={id}>\n          <p>{value} </p>\n          {/* <button onClick={() => this.removeGoal(id)}>remove</button> */}\n        </li>\n      );\n    });\n  };\n\n  render() {\n    return (\n      <div>\n        \n        {/* // FORM */}\n        <form action=\"\">\n          <label htmlFor=\"newGoal\">What do you want someone to write about? </label>\n          <input type=\"text\" id=\"newGoal\" onChange={this.handleInputChange} />\n          <button onClick={this.handleSubmit}>Add</button>\n        </form>\n\n        {/* // RANDOM ITEM */}\n\n        <p>Random Essay Idea: <strong>{this.props.displayRandomThing}</strong> \n            <button onClick={this.props.getRandomGoal}>Show me another</button> \n        </p>\n\n        {/* // LIST OF ITEMS */}\n        <ul>\n            {this.renderGoals(this.props.goalsArray)}\n        </ul>\n\n      </div>\n    );\n  }\n}\nexport default DisplayForm;","import \"./App.css\";\nimport firebase from \"./firebase.js\";\nimport { Component } from \"react\";\nimport DisplayForm from \"./DisplayForm.js\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      goalsArray: [],\n      randomGoal: \"\",\n    };\n    this.firebaseRef = this.firebaseRef.bind(this);\n    this.updateFirebase = this.updateFirebase.bind(this);\n    this.removeFromFirebase = this.removeFromFirebase.bind(this);\n  }\n\n  // get reference to firebase and return it\n  firebaseRef() {\n    const dbRef = firebase.database().ref();\n    return dbRef;\n  }\n\n  //generic function to update firebase\n  updateFirebase(value) {\n    if (value === undefined || null) return;\n    const dbRef = this.firebaseRef();\n    dbRef.push(value);\n  }\n\n  //generic function to remove from firebase\n  removeFromFirebase(id) {\n    if (id === undefined || null) return;\n    const dbRef = this.firebaseRef();\n    dbRef.child(id).remove();\n  }\n\n  componentDidMount() {\n    const dbRef = this.firebaseRef();\n    dbRef.on(\"value\", (snapshot) => {\n      const firebaseDataObj = snapshot.val();\n      console.log(firebaseDataObj);\n      if (firebaseDataObj === null) {\n        return this.setState({ goalsArray: [] });\n      }\n      const goalsArray = Object.entries(firebaseDataObj).map(([id, value]) => {\n        return { id, value };\n      });\n      this.setState({ goalsArray });\n      if (this.state.randomGoal === '') {\n        this.getRandomGoal();\n      } \n    });\n    \n  }\n\n  componentWillUnmount() {\n    const dbRef = this.firebaseRef();\n    dbRef.off();\n  }\n\n  getRandomGoal = () => {\n    const goalsArray = this.state.goalsArray;\n    const randomArrayIndex = Math.floor(Math.random() * goalsArray.length);\n    const randomItem = goalsArray[randomArrayIndex]?.value; \n    this.setState({\n      randomGoal: randomItem\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Essay Idea DB</h1>\n\n        <DisplayForm\n          goalsArray={this.state.goalsArray}\n          updateFirebase={this.updateFirebase}\n          removeFromFirebase={this.removeFromFirebase}\n          displayRandomThing={this.state.randomGoal}\n          getRandomGoal={this.getRandomGoal}\n        />\n        \n      </div>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}