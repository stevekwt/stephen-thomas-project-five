{"version":3,"sources":["firebase.js","DisplayForm.js","App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","DisplayForm","props","handleSubmit","e","preventDefault","updateFirebase","timeSubmittedinMS","Date","now","console","log","millisecondDateFormatted","humanDateAndTime","toLocaleString","item","state","userInput","date","name","nameInput","document","querySelector","value","handleInputChange","setState","target","handleNameChange","removeGoal","goalId","removeFromFirebase","renderGoals","goalsArray","length","map","className","changeDateOrder","orderDirection","sort","b","a","handleChange","selectedChoice","action","htmlFor","id","placeholder","onChange","this","required","type","onClick","displayRandomThing","getRandomGoal","disabled","Component","App","randomItem","Math","floor","random","randomGoal","firebaseRef","bind","database","ref","undefined","push","child","remove","on","snapshot","firebaseDataObj","val","Object","values","off","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.69c25ebb.chunk.js","sourcesContent":["// from https://firebase.google.com/docs/web/setup#using-module-bundlers\n// and https://github.com/HackerYou/bootcamp-notes/blob/master/react-and-firebase/using-firebase-with-react.md\n\n// import Firebase SDK from npm install firebase node package\n// Core firebase SDK\nimport firebase from \"firebase/app\";\n// Realtime database library\nimport \"firebase/database\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyAhusalV2PNOkZTGMJoF5jEdG6j1MyAwKQ\",\n    authDomain: \"continuity-fdab5.firebaseapp.com\",\n    databaseURL: \"https://continuity-fdab5.firebaseio.com\",\n    projectId: \"continuity-fdab5\",\n    storageBucket: \"continuity-fdab5.appspot.com\",\n    messagingSenderId: \"197882571705\",\n    appId: \"1:197882571705:web:d4d032992e5d5e0d586468\"\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nexport default firebase;","import \"./App.scss\";\nimport { Component, Fragment } from \"react\";\nclass DisplayForm extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      userInput: \"\",\n      nameInput: \"\",\n      selectedChoice: 'placeholder'\n    };\n  }\n\n  componentDidMount() {}\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    // destructure firebase function object from this.props\n    const { updateFirebase } = this.props;\n    const timeSubmittedinMS = Date.now();\n    console.log(`timeSubmittedinMS`, timeSubmittedinMS);\n    const millisecondDateFormatted = new Date(timeSubmittedinMS);\n    console.log(`millisecondDateFormatted`, millisecondDateFormatted);\n    const humanDateAndTime = millisecondDateFormatted.toLocaleString();\n    console.log(`humanDateAndTime is`, humanDateAndTime);\n    // const humanTime = Date(date);\n    // console.log(`humanTime`, humanTime);\n    const thingGoingToFirebase = { \n      item: this.state.userInput, \n      date: humanDateAndTime,\n      name: this.state.nameInput\n    }\n    updateFirebase(thingGoingToFirebase);\n    // clear the text input field\n    document.querySelector(\"input\").value = \"\";\n  };\n\n  handleInputChange = (e) => {\n    this.setState({\n      userInput: e.target.value,\n    });\n  };\n  handleNameChange = (e) => {\n    this.setState({\n      nameInput: e.target.value,\n    });\n  };\n\n  removeGoal = (goalId) => {\n    if (!goalId) return;\n    const { removeFromFirebase } = this.props;\n    removeFromFirebase(goalId);\n  };\n\n  renderGoals = (goalsArray) => {\n    if (!goalsArray.length) return <li>No goals to show</li>;\n    return goalsArray.map(({ date, item, name }) => {\n      return (\n        <li key={date}>\n          <p><span className=\"ideaSpan\">{item}</span></p>\n          {/* <span> -- </span> */}\n          <p className=\"attribution\">\n            Added by <span className=\"dateSpan\">{name}</span> on <span className=\"dateSpan\">{date}</span>\n          </p>\n          {/* <button onClick={() => this.removeGoal(item)}>remove</button> */}\n        </li>\n      );\n    });\n  };\n\n  changeDateOrder = (orderDirection) => {\n    console.log(`i'm in changeDateOrder`, orderDirection);\n    console.log(this.props.goalsArray);\n    const oldestFirst = ( a, b ) => {\n      if ( a.date < b.date ){\n        return -1;\n      }\n      if ( a.date > b.date ){\n        return 1;\n      }\n      return 0;\n    }\n    const newestFirst = ( b, a ) => {\n      if ( a.date < b.date ){\n        return -1;\n      }\n      if ( a.date > b.date ){\n        return 1;\n      }\n      return 0;\n    }\n    if (orderDirection === \"newest\") {\n      this.props.goalsArray.sort(newestFirst)\n    } else {\n      this.props.goalsArray.sort(oldestFirst)\n    }\n    console.log(`this.props.goalsArray after sort`, this.props.goalsArray);\n    this.renderGoals(this.props.goalsArray)\n  }\n\n  handleChange = (e) => {\n    e.preventDefault();\n    this.setState({\n      selectedChoice: e.target.value\n    })\n    // this.changeDateOrder(this.state.selectedChoice);\n    this.changeDateOrder(e.target.value);\n  }\n  \n  render() {\n    return (\n      <Fragment>\n        \n        {/* // FORM */}\n        <section className=\"inputFormSection\">\n          <div className=\"internalFormDiv wrapper\">\n          <form action=\"\">\n\n            <label htmlFor=\"newGoal\" className=\"newGoal\" >What do you want someone to write about? </label>\n\n            <textarea id=\"newGoal\" className=\"ideaTextField\" placeholder=\"Something world-explaining..?\" onChange={this.handleInputChange} required />\n\n            <div className=\"nameAndButton\">\n\n              <input type=\"text\" id=\"name\" className=\"nameField\" placeholder=\"Your Name\" onChange={this.handleNameChange} required />\n\n              <button className=\"addButton\" onClick={this.handleSubmit}>Add</button>   \n\n            </div>         \n\n          </form>\n          </div>\n        </section>\n\n        {/* // RANDOM ITEM */}\n        <section className=\"randomItem\">\n          <div className=\"internalRandomDiv wrapper\">\n            <span className=\"randomIntroText\">Random Essay Idea: </span>\n              \n            <span className=\"randomEssayIdea\">{this.props.displayRandomThing}</span> \n\n            <button className=\"anotherButton\" onClick={this.props.getRandomGoal}>Show me another</button> \n          </div>\n        </section>\n\n        {/* // LIST OF ITEMS */}\n        <section className=\"itemList\">\n          <div className=\"internalListDiv wrapper\">\n            <h2>The Ideas</h2>\n\n            <form>\n                <label htmlFor=\"orderByDate\" className=\"srOnly\">Order by:</label>\n                <select \n                    name=\"orderByDate\" \n                    id=\"orderByDate\" \n                    onChange={this.handleChange}\n                    value={this.state.selectedChoice} >\n                        <option value=\"placeholder\" disabled>Order By:</option>\n                        <option value=\"newest\">Newest</option>\n                        <option value=\"oldest\">Oldest</option>\n                </select>\n            </form>\n\n            <ul>\n                {this.renderGoals(this.props.goalsArray)}\n            </ul>\n          </div>\n        </section>\n\n      </Fragment>\n    );\n  }\n}\nexport default DisplayForm;","import \"./App.scss\";\nimport firebase from \"./firebase.js\";\nimport { Component, Fragment } from \"react\";\nimport DisplayForm from \"./DisplayForm.js\";\n\nclass App extends Component {\n\n  constructor(props) {\n    super();\n    this.state = {\n      goalsArray: [],\n      randomGoal: \"\",\n    };\n    this.firebaseRef = this.firebaseRef.bind(this);\n    this.updateFirebase = this.updateFirebase.bind(this);\n    this.removeFromFirebase = this.removeFromFirebase.bind(this);\n  }\n\n  // get reference to firebase and return it\n  firebaseRef() {\n    const dbRef = firebase.database().ref();\n    return dbRef;\n  }\n\n  //generic function to update firebase\n  updateFirebase(value) {\n    if (value === undefined || null) return;\n    const dbRef = this.firebaseRef();\n    dbRef.push(value);\n  }\n\n  //generic function to remove from firebase\n  removeFromFirebase(id) {\n    if (id === undefined || null) return;\n    const dbRef = this.firebaseRef();\n    dbRef.child(id).remove();\n  }\n\n  componentDidMount() {\n    const dbRef = this.firebaseRef();\n    dbRef.on(\"value\", (snapshot) => {\n      const firebaseDataObj = snapshot.val();\n      console.log(firebaseDataObj);\n      if (firebaseDataObj === null) {\n        return this.setState({ goalsArray: [] });\n      }\n      const goalsArray = Object.values(firebaseDataObj)\n      console.log(goalsArray);\n      this.setState({\n        goalsArray: goalsArray\n      });\n      console.log(this.state.goalsArray);\n      if (this.state.randomGoal === '') {\n        this.getRandomGoal();\n      } \n    });\n  }\n\n  componentWillUnmount() {\n    const dbRef = this.firebaseRef();\n    dbRef.off();\n  }\n\n  getRandomGoal = () => {\n    console.log(`inside getrandomgoals function`);\n    const goalsArray = this.state.goalsArray;\n    console.log(`goalsArray`, goalsArray);\n    const randomArrayIndex = Math.floor(Math.random() * goalsArray.length);\n    const randomItem = goalsArray[randomArrayIndex]?.item; \n    console.log(randomItem);\n    this.setState({\n      randomGoal: randomItem\n    })\n  }\n\n  render() {\n    return (\n      <Fragment>\n        <header>\n          <div className=\"internalHeader wrapper\">\n            <h1>Essay Idea DB</h1>\n          </div>\n        </header>\n\n        <DisplayForm\n          goalsArray={this.state.goalsArray}\n          updateFirebase={this.updateFirebase}\n          removeFromFirebase={this.removeFromFirebase}\n          displayRandomThing={this.state.randomGoal}\n          getRandomGoal={this.getRandomGoal}\n        />\n        \n      </Fragment>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}